{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "formatData",
    "fullyQualifiedName": "FormatTableData.formatData",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "Review Inbound Shipments",
    "collectionId": "Review Inbound Shipments_FormatTableData",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "() => {\n\t\tconsole.log(\"sup\")\n\t\tvar result = []\n\t\t\n\t\tconst orders = GetInboundShipmentsAtWarehouse.data.data.queryEquipment[0].orders\n\t\tfor (let i = 0; i < orders.length; i++) {\n\t\t\tfor (let j = 0; j < GetInboundShipmentsAtWarehouse.data.data.queryEquipment[0].orders[i].lines.length; j++) {\n\t\t\t\tfor (let k = 0; k < GetInboundShipmentsAtWarehouse.data.data.queryEquipment[0].orders[i].lines[j].material.materialEquipment.length; k ++) {\n\t\t\t\t\tfor (let l = 0; l < GetInboundShipmentsAtWarehouse.data.data.queryEquipment[0].orders[i].lines[j].material.materialEquipment[k].planningSummaryByState.length; l ++) {\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (l == 0) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (k == 0) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (j == 0) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tlet stockQuantities = {\n\t\t\t\t\t\t\t\t\t\t'orderNumber' : GetInboundShipmentsAtWarehouse.data.data.queryEquipment[0].orders[i].customerOrderNumber,\n\t\t\t\t\t\t\t\t\t\t'materialCode' : GetInboundShipmentsAtWarehouse.data.data.queryEquipment[0].orders[i].lines[j].material.code,\n\t\t\t\t\t\t\t\t\t\t'inboundQuantity' : GetInboundShipmentsAtWarehouse.data.data.queryEquipment[0].orders[i].lines[j].quantity,\n\t\t\t\t\t\t\t\t\t\t'warehouse' : GetInboundShipmentsAtWarehouse.data.data.queryEquipment[0].orders[i].lines[j].material.materialEquipment[k].equipment.name,\n\t\t\t\t\t\t\t\t\t\t'sohQty' : GetInboundShipmentsAtWarehouse.data.data.queryEquipment[0].orders[i].lines[j].material.materialEquipment[k].planningSummaryByState[l].stockOnHand,\n\t\t\t\t\t\t\t\t\t\t'min' : GetInboundShipmentsAtWarehouse.data.data.queryEquipment[0].orders[i].lines[j].material.materialEquipment[k].planningSummaryByState[l].inventoryMin,\n\t\t\t\t\t\t\t\t\t\t'max' : GetInboundShipmentsAtWarehouse.data.data.queryEquipment[0].orders[i].lines[j].material.materialEquipment[k].planningSummaryByState[l].inventoryMax,\n\t\t\t\t\t\t\t\t\t\t'status' : GetInboundShipmentsAtWarehouse.data.data.queryEquipment[0].orders[i].lines[j].material.materialEquipment[k].planningSummaryByState[l].state.status.code,\n\t\t\t\t\t\t\t\t\t\t'plannedQuantity' : 0\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tresult.push(stockQuantities)\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tlet stockQuantities = {\n\t\t\t\t\t\t\t\t\t\t'materialCode' : GetInboundShipmentsAtWarehouse.data.data.queryEquipment[0].orders[i].lines[j].material.code,\n\t\t\t\t\t\t\t\t\t\t'inboundQuantity' : GetInboundShipmentsAtWarehouse.data.data.queryEquipment[0].orders[i].lines[j].quantity,\n\t\t\t\t\t\t\t\t\t\t'warehouse' : GetInboundShipmentsAtWarehouse.data.data.queryEquipment[0].orders[i].lines[j].material.materialEquipment[k].equipment.name,\n\t\t\t\t\t\t\t\t\t\t'sohQty' : GetInboundShipmentsAtWarehouse.data.data.queryEquipment[0].orders[i].lines[j].material.materialEquipment[k].planningSummaryByState[l].stockOnHand,\n\t\t\t\t\t\t\t\t\t\t'min' : GetInboundShipmentsAtWarehouse.data.data.queryEquipment[0].orders[i].lines[j].material.materialEquipment[k].planningSummaryByState[l].inventoryMin,\n\t\t\t\t\t\t\t\t\t\t'max' : GetInboundShipmentsAtWarehouse.data.data.queryEquipment[0].orders[i].lines[j].material.materialEquipment[k].planningSummaryByState[l].inventoryMax,\n\t\t\t\t\t\t\t\t\t\t'status' : GetInboundShipmentsAtWarehouse.data.data.queryEquipment[0].orders[i].lines[j].material.materialEquipment[k].planningSummaryByState[l].state.status.code,\n\t\t\t\t\t\t\t\t\t\t'plannedQuantity' : 0\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tresult.push(stockQuantities)\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tlet stockQuantities = {\n\t\t\t\t\t\t\t\t\t'warehouse' : GetInboundShipmentsAtWarehouse.data.data.queryEquipment[0].orders[i].lines[j].material.materialEquipment[k].equipment.name,\n\t\t\t\t\t\t\t\t\t'sohQty' : GetInboundShipmentsAtWarehouse.data.data.queryEquipment[0].orders[i].lines[j].material.materialEquipment[k].planningSummaryByState[l].stockOnHand,\n\t\t\t\t\t\t\t\t\t'min' : GetInboundShipmentsAtWarehouse.data.data.queryEquipment[0].orders[i].lines[j].material.materialEquipment[k].planningSummaryByState[l].inventoryMin,\n\t\t\t\t\t\t\t\t\t'max' : GetInboundShipmentsAtWarehouse.data.data.queryEquipment[0].orders[i].lines[j].material.materialEquipment[k].planningSummaryByState[l].inventoryMax,\n\t\t\t\t\t\t\t\t\t'status' : GetInboundShipmentsAtWarehouse.data.data.queryEquipment[0].orders[i].lines[j].material.materialEquipment[k].planningSummaryByState[l].state.status.code,\n\t\t\t\t\t\t\t\t\t'plannedQuantity' : 0\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tresult.push(stockQuantities)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tlet stockQuantities = {\n\t\t\t\t\t\t\t\t'sohQty' : GetInboundShipmentsAtWarehouse.data.data.queryEquipment[0].orders[i].lines[j].material.materialEquipment[k].planningSummaryByState[l].stockOnHand,\n\t\t\t\t\t\t\t\t'min' : GetInboundShipmentsAtWarehouse.data.data.queryEquipment[0].orders[i].lines[j].material.materialEquipment[k].planningSummaryByState[l].inventoryMin,\n\t\t\t\t\t\t\t\t'max' : GetInboundShipmentsAtWarehouse.data.data.queryEquipment[0].orders[i].lines[j].material.materialEquipment[k].planningSummaryByState[l].inventoryMax,\n\t\t\t\t\t\t\t\t'status' : GetInboundShipmentsAtWarehouse.data.data.queryEquipment[0].orders[i].lines[j].material.materialEquipment[k].planningSummaryByState[l].state.status.code,\n\t\t\t\t\t\t\t\t'plannedQuantity' : 0\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tresult.push(stockQuantities)\t\t\t\n\t\t\t\t\t\t}\t\t\t\t\n\t\t\t\t\t}\t\t\n\t\t\t\t}\t\n\t\t\t}\n\t\t}\n\t\tstoreValue('ASNFormatted', result)\n\t\treturn result\n\t}",
      "jsArguments": [],
      "isAsync": false
    },
    "executeOnLoad": false,
    "clientSideExecution": true,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "() => {\n\t\tconsole.log(\"sup\")\n\t\tvar result = []\n\t\t\n\t\tconst orders = GetInboundShipmentsAtWarehouse.data.data.queryEquipment[0].orders\n\t\tfor (let i = 0; i < orders.length; i++) {\n\t\t\tfor (let j = 0; j < GetInboundShipmentsAtWarehouse.data.data.queryEquipment[0].orders[i].lines.length; j++) {\n\t\t\t\tfor (let k = 0; k < GetInboundShipmentsAtWarehouse.data.data.queryEquipment[0].orders[i].lines[j].material.materialEquipment.length; k ++) {\n\t\t\t\t\tfor (let l = 0; l < GetInboundShipmentsAtWarehouse.data.data.queryEquipment[0].orders[i].lines[j].material.materialEquipment[k].planningSummaryByState.length; l ++) {\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (l == 0) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (k == 0) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (j == 0) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tlet stockQuantities = {\n\t\t\t\t\t\t\t\t\t\t'orderNumber' : GetInboundShipmentsAtWarehouse.data.data.queryEquipment[0].orders[i].customerOrderNumber,\n\t\t\t\t\t\t\t\t\t\t'materialCode' : GetInboundShipmentsAtWarehouse.data.data.queryEquipment[0].orders[i].lines[j].material.code,\n\t\t\t\t\t\t\t\t\t\t'inboundQuantity' : GetInboundShipmentsAtWarehouse.data.data.queryEquipment[0].orders[i].lines[j].quantity,\n\t\t\t\t\t\t\t\t\t\t'warehouse' : GetInboundShipmentsAtWarehouse.data.data.queryEquipment[0].orders[i].lines[j].material.materialEquipment[k].equipment.name,\n\t\t\t\t\t\t\t\t\t\t'sohQty' : GetInboundShipmentsAtWarehouse.data.data.queryEquipment[0].orders[i].lines[j].material.materialEquipment[k].planningSummaryByState[l].stockOnHand,\n\t\t\t\t\t\t\t\t\t\t'min' : GetInboundShipmentsAtWarehouse.data.data.queryEquipment[0].orders[i].lines[j].material.materialEquipment[k].planningSummaryByState[l].inventoryMin,\n\t\t\t\t\t\t\t\t\t\t'max' : GetInboundShipmentsAtWarehouse.data.data.queryEquipment[0].orders[i].lines[j].material.materialEquipment[k].planningSummaryByState[l].inventoryMax,\n\t\t\t\t\t\t\t\t\t\t'status' : GetInboundShipmentsAtWarehouse.data.data.queryEquipment[0].orders[i].lines[j].material.materialEquipment[k].planningSummaryByState[l].state.status.code,\n\t\t\t\t\t\t\t\t\t\t'plannedQuantity' : 0\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tresult.push(stockQuantities)\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tlet stockQuantities = {\n\t\t\t\t\t\t\t\t\t\t'materialCode' : GetInboundShipmentsAtWarehouse.data.data.queryEquipment[0].orders[i].lines[j].material.code,\n\t\t\t\t\t\t\t\t\t\t'inboundQuantity' : GetInboundShipmentsAtWarehouse.data.data.queryEquipment[0].orders[i].lines[j].quantity,\n\t\t\t\t\t\t\t\t\t\t'warehouse' : GetInboundShipmentsAtWarehouse.data.data.queryEquipment[0].orders[i].lines[j].material.materialEquipment[k].equipment.name,\n\t\t\t\t\t\t\t\t\t\t'sohQty' : GetInboundShipmentsAtWarehouse.data.data.queryEquipment[0].orders[i].lines[j].material.materialEquipment[k].planningSummaryByState[l].stockOnHand,\n\t\t\t\t\t\t\t\t\t\t'min' : GetInboundShipmentsAtWarehouse.data.data.queryEquipment[0].orders[i].lines[j].material.materialEquipment[k].planningSummaryByState[l].inventoryMin,\n\t\t\t\t\t\t\t\t\t\t'max' : GetInboundShipmentsAtWarehouse.data.data.queryEquipment[0].orders[i].lines[j].material.materialEquipment[k].planningSummaryByState[l].inventoryMax,\n\t\t\t\t\t\t\t\t\t\t'status' : GetInboundShipmentsAtWarehouse.data.data.queryEquipment[0].orders[i].lines[j].material.materialEquipment[k].planningSummaryByState[l].state.status.code,\n\t\t\t\t\t\t\t\t\t\t'plannedQuantity' : 0\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tresult.push(stockQuantities)\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tlet stockQuantities = {\n\t\t\t\t\t\t\t\t\t'warehouse' : GetInboundShipmentsAtWarehouse.data.data.queryEquipment[0].orders[i].lines[j].material.materialEquipment[k].equipment.name,\n\t\t\t\t\t\t\t\t\t'sohQty' : GetInboundShipmentsAtWarehouse.data.data.queryEquipment[0].orders[i].lines[j].material.materialEquipment[k].planningSummaryByState[l].stockOnHand,\n\t\t\t\t\t\t\t\t\t'min' : GetInboundShipmentsAtWarehouse.data.data.queryEquipment[0].orders[i].lines[j].material.materialEquipment[k].planningSummaryByState[l].inventoryMin,\n\t\t\t\t\t\t\t\t\t'max' : GetInboundShipmentsAtWarehouse.data.data.queryEquipment[0].orders[i].lines[j].material.materialEquipment[k].planningSummaryByState[l].inventoryMax,\n\t\t\t\t\t\t\t\t\t'status' : GetInboundShipmentsAtWarehouse.data.data.queryEquipment[0].orders[i].lines[j].material.materialEquipment[k].planningSummaryByState[l].state.status.code,\n\t\t\t\t\t\t\t\t\t'plannedQuantity' : 0\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tresult.push(stockQuantities)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tlet stockQuantities = {\n\t\t\t\t\t\t\t\t'sohQty' : GetInboundShipmentsAtWarehouse.data.data.queryEquipment[0].orders[i].lines[j].material.materialEquipment[k].planningSummaryByState[l].stockOnHand,\n\t\t\t\t\t\t\t\t'min' : GetInboundShipmentsAtWarehouse.data.data.queryEquipment[0].orders[i].lines[j].material.materialEquipment[k].planningSummaryByState[l].inventoryMin,\n\t\t\t\t\t\t\t\t'max' : GetInboundShipmentsAtWarehouse.data.data.queryEquipment[0].orders[i].lines[j].material.materialEquipment[k].planningSummaryByState[l].inventoryMax,\n\t\t\t\t\t\t\t\t'status' : GetInboundShipmentsAtWarehouse.data.data.queryEquipment[0].orders[i].lines[j].material.materialEquipment[k].planningSummaryByState[l].state.status.code,\n\t\t\t\t\t\t\t\t'plannedQuantity' : 0\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tresult.push(stockQuantities)\t\t\t\n\t\t\t\t\t\t}\t\t\t\t\n\t\t\t\t\t}\t\t\n\t\t\t\t}\t\n\t\t\t}\n\t\t}\n\t\tstoreValue('ASNFormatted', result)\n\t\treturn result\n\t}"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "Review Inbound Shipments_formatData",
  "deleted": false,
  "gitSyncId": "6196c1950dfef900f247faaf_61c43432e89bc475f3ccf0ff"
}